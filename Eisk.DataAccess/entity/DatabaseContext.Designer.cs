//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("EmployeeDB_Model_NS", "FK_Employees_Employees", "Employees", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Eisk.DataAccess.Employee), "Employees1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Eisk.DataAccess.Employee), true)]

#endregion

namespace Eisk.DataAccess
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class EmployeeDB : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new EmployeeDB object using the connection string found in the 'EmployeeDB' section of the application configuration file.
        /// </summary>
        public EmployeeDB() : base("name=EmployeeDB", "EmployeeDB")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new EmployeeDB object.
        /// </summary>
        public EmployeeDB(string connectionString) : base(connectionString, "EmployeeDB")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new EmployeeDB object.
        /// </summary>
        public EmployeeDB(EntityConnection connection) : base(connection, "EmployeeDB")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Employee> Employees
        {
            get
            {
                if ((_Employees == null))
                {
                    _Employees = base.CreateObjectSet<Employee>("Employees");
                }
                return _Employees;
            }
        }
        private ObjectSet<Employee> _Employees;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Employees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployees(Employee employee)
        {
            base.AddObject("Employees", employee);
        }

        #endregion
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Employee> Employees_GetAllEmployees()
        {
            return base.ExecuteFunction<Employee>("Employees_GetAllEmployees");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<Employee> Employees_GetAllEmployees(MergeOption mergeOption)
        {
            return base.ExecuteFunction<Employee>("Employees_GetAllEmployees", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="reportsTo">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> Employees_GetEmployeesByReportsTo_Paged_Count(Nullable<global::System.Int32> reportsTo)
        {
            ObjectParameter reportsToParameter;
            if (reportsTo.HasValue)
            {
                reportsToParameter = new ObjectParameter("reportsTo", reportsTo);
            }
            else
            {
                reportsToParameter = new ObjectParameter("reportsTo", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("Employees_GetEmployeesByReportsTo_Paged_Count", reportsToParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="reportsTo">No Metadata Documentation available.</param>
        /// <param name="orderby">No Metadata Documentation available.</param>
        /// <param name="startrow">No Metadata Documentation available.</param>
        /// <param name="pagesize">No Metadata Documentation available.</param>
        public ObjectResult<Employee> Employees_GetEmployeesByReportsTo_Paged(Nullable<global::System.Int32> reportsTo, global::System.String orderby, Nullable<global::System.Int32> startrow, Nullable<global::System.Int32> pagesize)
        {
            ObjectParameter reportsToParameter;
            if (reportsTo.HasValue)
            {
                reportsToParameter = new ObjectParameter("reportsTo", reportsTo);
            }
            else
            {
                reportsToParameter = new ObjectParameter("reportsTo", typeof(global::System.Int32));
            }
    
            ObjectParameter orderbyParameter;
            if (orderby != null)
            {
                orderbyParameter = new ObjectParameter("orderby", orderby);
            }
            else
            {
                orderbyParameter = new ObjectParameter("orderby", typeof(global::System.String));
            }
    
            ObjectParameter startrowParameter;
            if (startrow.HasValue)
            {
                startrowParameter = new ObjectParameter("startrow", startrow);
            }
            else
            {
                startrowParameter = new ObjectParameter("startrow", typeof(global::System.Int32));
            }
    
            ObjectParameter pagesizeParameter;
            if (pagesize.HasValue)
            {
                pagesizeParameter = new ObjectParameter("pagesize", pagesize);
            }
            else
            {
                pagesizeParameter = new ObjectParameter("pagesize", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Employee>("Employees_GetEmployeesByReportsTo_Paged", reportsToParameter, orderbyParameter, startrowParameter, pagesizeParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="reportsTo">No Metadata Documentation available.</param>
        /// <param name="orderby">No Metadata Documentation available.</param>
        /// <param name="startrow">No Metadata Documentation available.</param>
        /// <param name="pagesize">No Metadata Documentation available.</param>
        public ObjectResult<Employee> Employees_GetEmployeesByReportsTo_Paged(Nullable<global::System.Int32> reportsTo, global::System.String orderby, Nullable<global::System.Int32> startrow, Nullable<global::System.Int32> pagesize, MergeOption mergeOption)
        {
            ObjectParameter reportsToParameter;
            if (reportsTo.HasValue)
            {
                reportsToParameter = new ObjectParameter("reportsTo", reportsTo);
            }
            else
            {
                reportsToParameter = new ObjectParameter("reportsTo", typeof(global::System.Int32));
            }
    
            ObjectParameter orderbyParameter;
            if (orderby != null)
            {
                orderbyParameter = new ObjectParameter("orderby", orderby);
            }
            else
            {
                orderbyParameter = new ObjectParameter("orderby", typeof(global::System.String));
            }
    
            ObjectParameter startrowParameter;
            if (startrow.HasValue)
            {
                startrowParameter = new ObjectParameter("startrow", startrow);
            }
            else
            {
                startrowParameter = new ObjectParameter("startrow", typeof(global::System.Int32));
            }
    
            ObjectParameter pagesizeParameter;
            if (pagesize.HasValue)
            {
                pagesizeParameter = new ObjectParameter("pagesize", pagesize);
            }
            else
            {
                pagesizeParameter = new ObjectParameter("pagesize", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Employee>("Employees_GetEmployeesByReportsTo_Paged", mergeOption, reportsToParameter, orderbyParameter, startrowParameter, pagesizeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="reportsTo">No Metadata Documentation available.</param>
        public ObjectResult<Employee> Employees_GetEmployeesByReportsTo(Nullable<global::System.Int32> reportsTo)
        {
            ObjectParameter reportsToParameter;
            if (reportsTo.HasValue)
            {
                reportsToParameter = new ObjectParameter("reportsTo", reportsTo);
            }
            else
            {
                reportsToParameter = new ObjectParameter("reportsTo", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Employee>("Employees_GetEmployeesByReportsTo", reportsToParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="reportsTo">No Metadata Documentation available.</param>
        public ObjectResult<Employee> Employees_GetEmployeesByReportsTo(Nullable<global::System.Int32> reportsTo, MergeOption mergeOption)
        {
            ObjectParameter reportsToParameter;
            if (reportsTo.HasValue)
            {
                reportsToParameter = new ObjectParameter("reportsTo", reportsTo);
            }
            else
            {
                reportsToParameter = new ObjectParameter("reportsTo", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Employee>("Employees_GetEmployeesByReportsTo", mergeOption, reportsToParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="employeeId">No Metadata Documentation available.</param>
        public ObjectResult<Employee> Employees_GetEmployeeByEmployeeId(Nullable<global::System.Int32> employeeId)
        {
            ObjectParameter employeeIdParameter;
            if (employeeId.HasValue)
            {
                employeeIdParameter = new ObjectParameter("EmployeeId", employeeId);
            }
            else
            {
                employeeIdParameter = new ObjectParameter("EmployeeId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Employee>("Employees_GetEmployeeByEmployeeId", employeeIdParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="employeeId">No Metadata Documentation available.</param>
        public ObjectResult<Employee> Employees_GetEmployeeByEmployeeId(Nullable<global::System.Int32> employeeId, MergeOption mergeOption)
        {
            ObjectParameter employeeIdParameter;
            if (employeeId.HasValue)
            {
                employeeIdParameter = new ObjectParameter("EmployeeId", employeeId);
            }
            else
            {
                employeeIdParameter = new ObjectParameter("EmployeeId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Employee>("Employees_GetEmployeeByEmployeeId", mergeOption, employeeIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Nullable<global::System.Int32>> Employees_GetAllEmployees_Paged_Count()
        {
            return base.ExecuteFunction<Nullable<global::System.Int32>>("Employees_GetAllEmployees_Paged_Count");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="orderby">No Metadata Documentation available.</param>
        /// <param name="startrow">No Metadata Documentation available.</param>
        /// <param name="pagesize">No Metadata Documentation available.</param>
        public ObjectResult<Employee> Employees_GetAllEmployees_Paged(global::System.String orderby, Nullable<global::System.Int32> startrow, Nullable<global::System.Int32> pagesize)
        {
            ObjectParameter orderbyParameter;
            if (orderby != null)
            {
                orderbyParameter = new ObjectParameter("orderby", orderby);
            }
            else
            {
                orderbyParameter = new ObjectParameter("orderby", typeof(global::System.String));
            }
    
            ObjectParameter startrowParameter;
            if (startrow.HasValue)
            {
                startrowParameter = new ObjectParameter("startrow", startrow);
            }
            else
            {
                startrowParameter = new ObjectParameter("startrow", typeof(global::System.Int32));
            }
    
            ObjectParameter pagesizeParameter;
            if (pagesize.HasValue)
            {
                pagesizeParameter = new ObjectParameter("pagesize", pagesize);
            }
            else
            {
                pagesizeParameter = new ObjectParameter("pagesize", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Employee>("Employees_GetAllEmployees_Paged", orderbyParameter, startrowParameter, pagesizeParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="orderby">No Metadata Documentation available.</param>
        /// <param name="startrow">No Metadata Documentation available.</param>
        /// <param name="pagesize">No Metadata Documentation available.</param>
        public ObjectResult<Employee> Employees_GetAllEmployees_Paged(global::System.String orderby, Nullable<global::System.Int32> startrow, Nullable<global::System.Int32> pagesize, MergeOption mergeOption)
        {
            ObjectParameter orderbyParameter;
            if (orderby != null)
            {
                orderbyParameter = new ObjectParameter("orderby", orderby);
            }
            else
            {
                orderbyParameter = new ObjectParameter("orderby", typeof(global::System.String));
            }
    
            ObjectParameter startrowParameter;
            if (startrow.HasValue)
            {
                startrowParameter = new ObjectParameter("startrow", startrow);
            }
            else
            {
                startrowParameter = new ObjectParameter("startrow", typeof(global::System.Int32));
            }
    
            ObjectParameter pagesizeParameter;
            if (pagesize.HasValue)
            {
                pagesizeParameter = new ObjectParameter("pagesize", pagesize);
            }
            else
            {
                pagesizeParameter = new ObjectParameter("pagesize", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Employee>("Employees_GetAllEmployees_Paged", mergeOption, orderbyParameter, startrowParameter, pagesizeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="employeeIds">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> Employees_DeleteEmployees(global::System.String employeeIds)
        {
            ObjectParameter employeeIdsParameter;
            if (employeeIds != null)
            {
                employeeIdsParameter = new ObjectParameter("employeeIds", employeeIds);
            }
            else
            {
                employeeIdsParameter = new ObjectParameter("employeeIds", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("Employees_DeleteEmployees", employeeIdsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<EmployeeWithSupervisorName> Custom_Employees_GetAllEmployeesWithSupervisors()
        {
            return base.ExecuteFunction<EmployeeWithSupervisorName>("Custom_Employees_GetAllEmployeesWithSupervisors");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Employee> Custom_Employees_GetAllTopAndGeneralEmployees()
        {
            return base.ExecuteFunction<Employee>("Custom_Employees_GetAllTopAndGeneralEmployees");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<Employee> Custom_Employees_GetAllTopAndGeneralEmployees(MergeOption mergeOption)
        {
            return base.ExecuteFunction<Employee>("Custom_Employees_GetAllTopAndGeneralEmployees", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="lastName">No Metadata Documentation available.</param>
        /// <param name="firstName">No Metadata Documentation available.</param>
        /// <param name="city">No Metadata Documentation available.</param>
        /// <param name="region">No Metadata Documentation available.</param>
        /// <param name="country">No Metadata Documentation available.</param>
        public ObjectResult<Employee> Custom_Employees_GetEmployeesByFilterParams(global::System.String lastName, global::System.String firstName, global::System.String city, global::System.String region, global::System.String country)
        {
            ObjectParameter lastNameParameter;
            if (lastName != null)
            {
                lastNameParameter = new ObjectParameter("lastName", lastName);
            }
            else
            {
                lastNameParameter = new ObjectParameter("lastName", typeof(global::System.String));
            }
    
            ObjectParameter firstNameParameter;
            if (firstName != null)
            {
                firstNameParameter = new ObjectParameter("firstName", firstName);
            }
            else
            {
                firstNameParameter = new ObjectParameter("firstName", typeof(global::System.String));
            }
    
            ObjectParameter cityParameter;
            if (city != null)
            {
                cityParameter = new ObjectParameter("city", city);
            }
            else
            {
                cityParameter = new ObjectParameter("city", typeof(global::System.String));
            }
    
            ObjectParameter regionParameter;
            if (region != null)
            {
                regionParameter = new ObjectParameter("region", region);
            }
            else
            {
                regionParameter = new ObjectParameter("region", typeof(global::System.String));
            }
    
            ObjectParameter countryParameter;
            if (country != null)
            {
                countryParameter = new ObjectParameter("country", country);
            }
            else
            {
                countryParameter = new ObjectParameter("country", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Employee>("Custom_Employees_GetEmployeesByFilterParams", lastNameParameter, firstNameParameter, cityParameter, regionParameter, countryParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="lastName">No Metadata Documentation available.</param>
        /// <param name="firstName">No Metadata Documentation available.</param>
        /// <param name="city">No Metadata Documentation available.</param>
        /// <param name="region">No Metadata Documentation available.</param>
        /// <param name="country">No Metadata Documentation available.</param>
        public ObjectResult<Employee> Custom_Employees_GetEmployeesByFilterParams(global::System.String lastName, global::System.String firstName, global::System.String city, global::System.String region, global::System.String country, MergeOption mergeOption)
        {
            ObjectParameter lastNameParameter;
            if (lastName != null)
            {
                lastNameParameter = new ObjectParameter("lastName", lastName);
            }
            else
            {
                lastNameParameter = new ObjectParameter("lastName", typeof(global::System.String));
            }
    
            ObjectParameter firstNameParameter;
            if (firstName != null)
            {
                firstNameParameter = new ObjectParameter("firstName", firstName);
            }
            else
            {
                firstNameParameter = new ObjectParameter("firstName", typeof(global::System.String));
            }
    
            ObjectParameter cityParameter;
            if (city != null)
            {
                cityParameter = new ObjectParameter("city", city);
            }
            else
            {
                cityParameter = new ObjectParameter("city", typeof(global::System.String));
            }
    
            ObjectParameter regionParameter;
            if (region != null)
            {
                regionParameter = new ObjectParameter("region", region);
            }
            else
            {
                regionParameter = new ObjectParameter("region", typeof(global::System.String));
            }
    
            ObjectParameter countryParameter;
            if (country != null)
            {
                countryParameter = new ObjectParameter("country", country);
            }
            else
            {
                countryParameter = new ObjectParameter("country", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Employee>("Custom_Employees_GetEmployeesByFilterParams", mergeOption, lastNameParameter, firstNameParameter, cityParameter, regionParameter, countryParameter);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EmployeeDB_Model_NS", Name="Employee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Employee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Employee object.
        /// </summary>
        /// <param name="employeeId">Initial value of the EmployeeId property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="hireDate">Initial value of the HireDate property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="country">Initial value of the Country property.</param>
        /// <param name="homePhone">Initial value of the HomePhone property.</param>
        public static Employee CreateEmployee(global::System.Int32 employeeId, global::System.String lastName, global::System.String firstName, global::System.DateTime hireDate, global::System.String address, global::System.String country, global::System.String homePhone)
        {
            Employee employee = new Employee();
            employee.EmployeeId = employeeId;
            employee.LastName = lastName;
            employee.FirstName = firstName;
            employee.HireDate = hireDate;
            employee.Address = address;
            employee.Country = country;
            employee.HomePhone = homePhone;
            return employee;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                if (_EmployeeId != value)
                {
                    OnEmployeeIdChanging(value);
                    ReportPropertyChanging("EmployeeId");
                    _EmployeeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmployeeId");
                    OnEmployeeIdChanged();
                }
            }
        }
        private global::System.Int32 _EmployeeId;
        partial void OnEmployeeIdChanging(global::System.Int32 value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TitleOfCourtesy
        {
            get
            {
                return _TitleOfCourtesy;
            }
            set
            {
                OnTitleOfCourtesyChanging(value);
                ReportPropertyChanging("TitleOfCourtesy");
                _TitleOfCourtesy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TitleOfCourtesy");
                OnTitleOfCourtesyChanged();
            }
        }
        private global::System.String _TitleOfCourtesy;
        partial void OnTitleOfCourtesyChanging(global::System.String value);
        partial void OnTitleOfCourtesyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BirthDate
        {
            get
            {
                return _BirthDate;
            }
            set
            {
                OnBirthDateChanging(value);
                ReportPropertyChanging("BirthDate");
                _BirthDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BirthDate");
                OnBirthDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _BirthDate;
        partial void OnBirthDateChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime HireDate
        {
            get
            {
                return _HireDate;
            }
            set
            {
                OnHireDateChanging(value);
                ReportPropertyChanging("HireDate");
                _HireDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HireDate");
                OnHireDateChanged();
            }
        }
        private global::System.DateTime _HireDate;
        partial void OnHireDateChanging(global::System.DateTime value);
        partial void OnHireDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Region
        {
            get
            {
                return _Region;
            }
            set
            {
                OnRegionChanging(value);
                ReportPropertyChanging("Region");
                _Region = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Region");
                OnRegionChanged();
            }
        }
        private global::System.String _Region;
        partial void OnRegionChanging(global::System.String value);
        partial void OnRegionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostalCode
        {
            get
            {
                return _PostalCode;
            }
            set
            {
                OnPostalCodeChanging(value);
                ReportPropertyChanging("PostalCode");
                _PostalCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostalCode");
                OnPostalCodeChanged();
            }
        }
        private global::System.String _PostalCode;
        partial void OnPostalCodeChanging(global::System.String value);
        partial void OnPostalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HomePhone
        {
            get
            {
                return _HomePhone;
            }
            set
            {
                OnHomePhoneChanging(value);
                ReportPropertyChanging("HomePhone");
                _HomePhone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HomePhone");
                OnHomePhoneChanged();
            }
        }
        private global::System.String _HomePhone;
        partial void OnHomePhoneChanging(global::System.String value);
        partial void OnHomePhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Extension
        {
            get
            {
                return _Extension;
            }
            set
            {
                OnExtensionChanging(value);
                ReportPropertyChanging("Extension");
                _Extension = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Extension");
                OnExtensionChanged();
            }
        }
        private global::System.String _Extension;
        partial void OnExtensionChanging(global::System.String value);
        partial void OnExtensionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Photo
        {
            get
            {
                return StructuralObject.GetValidValue(_Photo);
            }
            set
            {
                OnPhotoChanging(value);
                ReportPropertyChanging("Photo");
                _Photo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Photo");
                OnPhotoChanged();
            }
        }
        private global::System.Byte[] _Photo;
        partial void OnPhotoChanging(global::System.Byte[] value);
        partial void OnPhotoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReportsTo
        {
            get
            {
                return _ReportsTo;
            }
            set
            {
                OnReportsToChanging(value);
                ReportPropertyChanging("ReportsTo");
                _ReportsTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReportsTo");
                OnReportsToChanged();
            }
        }
        private Nullable<global::System.Int32> _ReportsTo;
        partial void OnReportsToChanging(Nullable<global::System.Int32> value);
        partial void OnReportsToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhotoPath
        {
            get
            {
                return _PhotoPath;
            }
            set
            {
                OnPhotoPathChanging(value);
                ReportPropertyChanging("PhotoPath");
                _PhotoPath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhotoPath");
                OnPhotoPathChanged();
            }
        }
        private global::System.String _PhotoPath;
        partial void OnPhotoPathChanging(global::System.String value);
        partial void OnPhotoPathChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EmployeeDB_Model_NS", "FK_Employees_Employees", "Employees1")]
        public EntityCollection<Employee> Subordinates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("EmployeeDB_Model_NS.FK_Employees_Employees", "Employees1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("EmployeeDB_Model_NS.FK_Employees_Employees", "Employees1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EmployeeDB_Model_NS", "FK_Employees_Employees", "Employees")]
        public Employee Supervisor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("EmployeeDB_Model_NS.FK_Employees_Employees", "Employees").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("EmployeeDB_Model_NS.FK_Employees_Employees", "Employees").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> SupervisorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("EmployeeDB_Model_NS.FK_Employees_Employees", "Employees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("EmployeeDB_Model_NS.FK_Employees_Employees", "Employees", value);
                }
            }
        }

        #endregion
    }

    #endregion
    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="EmployeeDB_Model_NS", Name="EmployeeWithSupervisorName")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class EmployeeWithSupervisorName : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeWithSupervisorName object.
        /// </summary>
        /// <param name="employeeID">Initial value of the EmployeeID property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="supervisorFirstName">Initial value of the SupervisorFirstName property.</param>
        /// <param name="supervisorLastName">Initial value of the SupervisorLastName property.</param>
        public static EmployeeWithSupervisorName CreateEmployeeWithSupervisorName(global::System.Int32 employeeID, global::System.String firstName, global::System.String lastName, global::System.String supervisorFirstName, global::System.String supervisorLastName)
        {
            EmployeeWithSupervisorName employeeWithSupervisorName = new EmployeeWithSupervisorName();
            employeeWithSupervisorName.EmployeeID = employeeID;
            employeeWithSupervisorName.FirstName = firstName;
            employeeWithSupervisorName.LastName = lastName;
            employeeWithSupervisorName.SupervisorFirstName = supervisorFirstName;
            employeeWithSupervisorName.SupervisorLastName = supervisorLastName;
            return employeeWithSupervisorName;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeID
        {
            get
            {
                return _EmployeeID;
            }
            set
            {
                OnEmployeeIDChanging(value);
                ReportPropertyChanging("EmployeeID");
                _EmployeeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeID");
                OnEmployeeIDChanged();
            }
        }
        private global::System.Int32 _EmployeeID;
        partial void OnEmployeeIDChanging(global::System.Int32 value);
        partial void OnEmployeeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SupervisorFirstName
        {
            get
            {
                return _SupervisorFirstName;
            }
            set
            {
                OnSupervisorFirstNameChanging(value);
                ReportPropertyChanging("SupervisorFirstName");
                _SupervisorFirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SupervisorFirstName");
                OnSupervisorFirstNameChanged();
            }
        }
        private global::System.String _SupervisorFirstName;
        partial void OnSupervisorFirstNameChanging(global::System.String value);
        partial void OnSupervisorFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SupervisorLastName
        {
            get
            {
                return _SupervisorLastName;
            }
            set
            {
                OnSupervisorLastNameChanging(value);
                ReportPropertyChanging("SupervisorLastName");
                _SupervisorLastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SupervisorLastName");
                OnSupervisorLastNameChanged();
            }
        }
        private global::System.String _SupervisorLastName;
        partial void OnSupervisorLastNameChanging(global::System.String value);
        partial void OnSupervisorLastNameChanged();

        #endregion
    }

    #endregion
    
}
